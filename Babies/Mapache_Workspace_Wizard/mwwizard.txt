cat << 'EOF' > Makefile
# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mapache <marvin@42.fr>                     +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/05/19 19:58:17 by mapache           #+#    #+#              #
#    Updated: 2025/10/20 18:20:46 by lde-san-         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

MINT	= \033[38;2;55;250;133;48;2;0;0;0m
MINT_B  = \033[1;38;2;55;250;133;48;2;0;0;0m
MINT_I  = \033[3;38;2;55;250;133;48;2;0;0;0m

RESET   = \033[0m

all:
	@printf "$(MINT_B)ü¶ù SETTING UP $(shell whoami) WORKSPACE ü¶ù$(RESET)\n"
	@sleep 2
	@make -C . profile
	mkdir Mapache
	mv Makefile Mapache
	ssh-keygen
	cp .ssh/*.pub Mapache
	@printf "$(MINT)ü¶ù Main folder created with pub-key inside ü¶ù$(RESET)\n"
	@printf "$(MINT_I)  remember to add it to your git later$(RESET)\n"
	@sleep 3
	@clear
	@printf "$(MINT_B)ü¶ù Checking for updates! ü¶ù$(RESET)\n"
	@sudo apt install curl
	@sudo apt update
	@printf "$(MINT_B)ü¶ù Applying updates! ü¶ù$(RESET)\n"
	@sudo apt upgrade
	@printf "$(MINT_I)  Now everything should be up to date! $(RESET)\n"
	@sleep 3
	@clear
	@printf "$(MINT_B)ü¶ù LET'S MAKE SURE YOU HAVE GIT ü¶ù$(RESET)\n"
	@sleep 1
	sudo apt install git
	@printf "$(MINT_I) If you didn't, now you should have it $(RESET)\n"
	@sleep 2
	@clear
	@printf "$(MINT_B)ü¶ù NOW LET'S HOOK YOU UP WITH SOME ZHS GOODNESS ü¶ù$(RESET)\n"
	@sleep 0.5
	sudo apt install zsh
	@printf "$(MINT)ü¶ù BOOM goes the dynamite. That's done ü¶ù$(RESET)\n"
	@sleep 3
	@clear
	@printf "$(MINT_B)OH$(RESET)"
	@sleep 0.5
	@printf "$(MINT_B) MY$(RESET)"
	@sleep 0.5
	@printf "$(MINT_B) GOD...$(RESET)"
	@sleep 1
	@printf "$(MINT) Is Time for:$(RESET)\n"
	@sleep 0.5
	@printf "$(MINT_B)ü¶ù OH$(RESET)"
	@sleep 0.5
	@printf "$(MINT_B)-$(RESET)"
	@sleep 0.5
	@printf "$(MINT_B)MY$(RESET)"
	@sleep 0.5
	@printf "$(MINT_B)-$(RESET)"
	@sleep 0.5
	@printf "$(MINT_B)ZSH! ü¶ù$(RESET)\n"
	@sleep 0.5
	@RUNZSH=no CHSH=yes USER=$(shell whoami) sh -c "$$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
	@printf "$(MINT)ü¶ù See that? Pretty ain't it? ü¶ù$(RESET)\n"
	@sleep 3
	@clear
	@printf "$(MINT_B) ü¶ù Miss VIM? The 42 Header? ü¶ù$(RESET)\n"
	@printf "$(MINT)PARA DE SOFRER RAPAZ! I got you ü§ô$(RESET)\n"
	@sleep 1
	@printf "\n$(MINT_I) ü¶ù  A little bit'o python for spice ...: $(RESET)\n"
	@sudo apt install python3-full python3-venv python3-dev
	@printf "\n"
	@printf "$(MINT_I) ü¶ù And now the good stuf ...: $(RESET)\n"
	git clone https://github.com/Kuninoto/installette
	cd installette ; bash installette.sh -v -h
	rm -f ~/.vimrc
	echo 'set noexpandtab' > ~/.vimrc
	echo 'set tabstop=4' >> ~/.vimrc
	echo 'set shiftwidth=4' >> ~/.vimrc
	echo 'set softtabstop=4' >> ~/.vimrc
	echo 'set autoindent' >> ~/.vimrc
	echo 'set smartindent' >> ~/.vimrc
	echo 'set number' >> ~/.vimrc
	echo 'set background=dark' >> ~/.vimrc
	echo 'set colorcolumn=81' >> ~/.vimrc
	echo 'set mouse=n' >> ~/.vimrc
	echo '' >> ~/.vimrc
	echo 'nnoremap <Leader>cc :set colorcolumn=81<cr>' >> ~/.vimrc
	echo 'nnoremap <Leader>ncc :set colorcolumn-=81<cr>' >> ~/.vimrc
	echo 'highlight ColorColumn ctermbg=darkgrey guibg=#212121' >> ~/.vimrc
	echo '' >> ~/.vimrc
	echo 'set termguicolors' >> ~/.vimrc
	echo '' >> ~/.vimrc
	echo 'syntax on' >> ~/.vimrc
	echo '' >> ~/.vimrc
	echo 'highlight clear Comment' >> ~/.vimrc
	echo 'highlight clear Type' >> ~/.vimrc
	echo 'highlight clear PreProc' >> ~/.vimrc
	echo 'highlight clear Function' >> ~/.vimrc
	echo 'highlight clear Constant' >> ~/.vimrc
	echo 'highlight clear String' >> ~/.vimrc
	echo 'highlight clear LineNr' >> ~/.vimrc
	echo 'highlight clear Keyword' >> ~/.vimrc
	echo 'highlight clear Normal' >> ~/.vimrc
	echo '' >> ~/.vimrc
	echo 'highlight ColorColumn guibg=#212121' >> ~/.vimrc
	echo 'highlight Comment guifg=#00fff7' >> ~/.vimrc
	echo 'highlight Type guifg=#00ffbb' >> ~/.vimrc
	echo 'highlight PreProc guifg=#a849e3' >> ~/.vimrc
	echo 'highlight Function guifg=#ffffff' >> ~/.vimrc
	echo 'highlight Constant guifg=#fc32e1' >> ~/.vimrc
	echo 'highlight String guifg=#ffb300' >> ~/.vimrc
	echo 'highlight LineNr guifg=#6e6e6e' >> ~/.vimrc
	echo 'highlight Keyword guifg=#ffc400' >> ~/.vimrc
	echo 'highlight Normal guifg=#ffffff' >> ~/.vimrc
	sed -i 's/let l:user = .*/let l:user = "lde-san-"/' ~/.vim/plugin/stdheader.vim
	sed -i 's/let l:mail = .*/let l:mail = "lde-san-@student.42porto.com"/' ~/.vim/plugin/stdheader.vim
	@printf "$(MINT)Now you should be able to simulate a 42-like envirorment$(RESET)\n"
	@printf "$(MINT_I)Remember you can install Norminette and Francinette with:$(RESET)\n"
	@printf "$(MINT_B)               'make norm' & 'make paco'$(RESET)\n"
	@sleep 5
	@clear
	@printf "$(MINT_B)ü¶ù THERE YOU GO! ALL SET AND READY TO RUMBLE ü¶ù$(RESET)\n"
	@sleep 1
	@printf "$(MINT)Thank you for using the Mapache Workspace Set-up Wizard$(RESET)\n"
	@printf "$(MINT)    Don't forget to add your public key to your\n    git. After that, you can go into your freshly\n    created 'Mapache' folder, and type make fruta\n      to clone La_Fruta to your workspace. :3$(RESET)\n"
	@printf "$(MINT_I)\n\n		fading dramatically into the void...$(RESET)\n"
	@sleep 1
	@printf "\n$(MINT_B)ü¶ù 3$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B) 2$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B) 1$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B) ü¶ù$(RESET)"
	@sleep 1
	@clear
	@printf "$(MINT_B)ü¶ù Bye for now <3 ü¶ù$(RESET)\n"
	@sleep 2
	@clear

fruta:
	@bash -c '\
		printf "$(MINT_B)ü¶ù Have you already set up the key? ü¶ù$(RESET)\n\n"; \
		cat *.pub; \
		printf "$(MINT_I)\n   Press ENTER to continue, or CTRL+SHIFT+C to cancel. ü§ô$(RESET)\n"; \
		read; \
		printf "$(MINT_B)\n   üí• Alright! Lets summon the Pineapple! üí•$(RESET)\n"; \
	'
	@git config --global user.name Mapache
	@git config --global user.email ljtorcate@gmail.com
	@rm -rf *.pub
	git clone git@github.com:Raccoonatic/ft_pineapple.git La_Fruta

norm:
	sudo apt install python3-setuptools
	sudo apt install pipx
	pipx install norminette
	pipx install norminette --force
	pipx ensurepath

uninstall:
	@bash -c '\
		printf "$(MINT_B)ü¶ù THIS WILL DELETE EVERYTHING IN YOUR MAPACHE FOLDER ü¶ù$(RESET)\n"; \
		sleep 0.5; \
		printf "$(MINT)\n\t    Are you sure you want to continue?$(RESET)\n"; \
		sleep 0.5; \
		printf "$(MINT_B)\n\tYou are in: $(RESET)"; \
		pwd; \
		printf "$(MINT_B)   If you are not at the root of your Mapache folder, \n    or your git is not updated, STOP THIS IMEDIATELY$(RESET)\n"; \
		printf "$(MINT_I)\n   Press ENTER to continue, or CTRL+SHIFT+C to cancel. ü§ô$(RESET)\n"; \
		read; \
		printf "$(MINT_B)   üí• You kept going, you brave boy. How sexy of you üí•$(RESET)\n"; \
	'
	@sleep 3
	@clear
	mv Makefile ~
	cd .. ; cd installette ; bash installette.sh -u
	cd .. ; pip uninstall norminette --break-system-packages
	rm -rf ~/.ssh
	rm -rf ~/.zshrc ~/.oh-my-zsh ~/.zsh_history ~/.zprofile ~/.zlogin ~/.zlogout
	rm -rf .zcompdump
	rm -rf .zcompdump*
	sudo apt remove vim
	rm -rf ~/installette/.git
	rm -rf ~/installette
	rm -rf ~/francinette/.git
	rm -rf ~/francinette
	sudo apt remove -y git
	@sleep 2
	@clear
	@printf "$(MINT_B)ü¶ù ALL DONE! HOPE YOU KNEW WHAT YOU WERE DOING ü¶ù$(RESET)\n"
	@sleep 1
	@printf "$(MINT)Thank you for using the Mapache Workspace Set-up Wizard$(RESET)\n"
	@printf "$(MINT)\nDon't forget to remove your public key from your git$(RESET)\n"
	@printf "$(MINT_I)\n\n		fading dramatically into the void...$(RESET)\n\n"
	rm -rf ~/.shell.pre-oh-my-zsh
	rm -rf ~/.vim
	rm -rf ~/.viminfo
	rm -rf ~/.vimrc
	rm -rf ~/.gitconfig
	cp /etc/skel/.bashrc ~/
	cp /etc/skel/.profile ~/
	chsh -s /bin/bash
	@sleep 0.5
	@printf "\n$(MINT_B)ü¶ù 3$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B) 2$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B) 1$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B).$(RESET)"
	@sleep 0.3
	@printf "$(MINT_B) ü¶ù$(RESET)"
	@sleep 1
	@clear
	@printf "$(MINT_B)ü¶ù Bye for now <3 ü¶ù$(RESET)\n       "
	rm -rf ~/Mapache
	@sleep 3
	@clear

paco:
	@printf "$(MINT_B)ü¶ù Sorry mate, couldnt make it work ü¶ù$(RESET)\n"
	@printf "$(MINT_I)\nJust run this from your home folder.\n     Is for the best. Love you!$(RESET)\n\n"
	@printf 'bash -c "$$(curl -fsSL https://raw.github.com/xicodomingues/francinette/master/bin/install.sh)"\n'

omg:
	rm -rf ~/.ssh
	rm -rf ~/.zshrc ~/.oh-my-zsh ~/.zsh_history ~/.zprofile ~/.zlogin ~/.zlogout
	rm -f ~/.bashrc ~/.bash_profile ~/.profile ~/.zshrc ~/.zshenv ~/.zlogin ~/.zlogout ~/.zcompdump* ~/.oh-my-zsh ~/.bash_logout
	rm -rf ~/.shell.pre-oh-my-zsh
	rm -rf .zcompdump
	rm -rf .zcompdump*

profile:
	@clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile    ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile.   ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile..  ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile... ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile    ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile.   ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile..  ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile... ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile    ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile.   ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile..  ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile... ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile    ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile.   ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile..  ü¶ù$(RESET)"
	@sleep 0.2 && clear
	@printf "$(MINT)\nü¶ù Building Mapache Terminal Profile... ü¶ù$(RESET)"
	@clear
	@> create_mapache_profile.sh
	@printf "%s\n" '#!/bin/bash'>> create_mapache_profile.sh
	@printf "%s\n" ''>> create_mapache_profile.sh
	@printf "%s\n" 'UUID='\"'b1dcc9dd-5262-4d8d-a863-c897e6d979b9'\"''>> create_mapache_profile.sh
	@printf "%s\n" 'PROFILE_NAME='\"'Mapache_Main'\"''>> create_mapache_profile.sh
	@printf "%s\n" ''>> create_mapache_profile.sh
	@printf "%s\n" 'BASE_KEY='\"'/org/gnome/terminal/legacy/profiles:/:$$UUID/'\"''>> create_mapache_profile.sh
	@printf "%s\n" ''>> create_mapache_profile.sh
	@printf "%s\n" '# Add profile to list if missing'>> create_mapache_profile.sh
	@printf "%s\n" 'PROFILE_LIST=$$(gsettings get org.gnome.Terminal.ProfilesList list)'>> create_mapache_profile.sh
	@printf "%s\n" 'if [[ $$PROFILE_LIST != *'\"'$$UUID'\"'* ]]; then'>> create_mapache_profile.sh
	@printf "%s\n" '    NEW_LIST=$$(echo '\"'$$PROFILE_LIST'\"' | sed '\"'s/]$$/, '\''$$UUID'\'']/'\"')'>> create_mapache_profile.sh
	@printf "%s\n" '    gsettings set org.gnome.Terminal.ProfilesList list '\"'$$NEW_LIST'\"''>> create_mapache_profile.sh
	@printf "%s\n" 'fi'>> create_mapache_profile.sh
	@printf "%s\n" ''>> create_mapache_profile.sh
	@printf "%s\n" '# Set profile name'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY visible-name '\"'$$PROFILE_NAME'\"''>> create_mapache_profile.sh
	@printf "%s\n" ''>> create_mapache_profile.sh
	@printf "%s\n" '# Apply settings'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY audible-bell true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY background-color '\''rgb(0,0,10)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY background-transparency-percent 4'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY backspace-binding '\''ascii-delete'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY bold-color '\''rgb(255,253,233)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY bold-color-same-as-fg true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY bold-is-bright true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cell-height-scale 1.05'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cell-width-scale 1.05'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cjk-utf8-ambiguous-width '\''narrow'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cursor-background-color '\''rgb(255,176,0)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cursor-blink-mode '\''system'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cursor-colors-set true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cursor-foreground-color '\''rgb(0,0,0)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY cursor-shape '\''block'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY custom-command '\'''\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY default-size-columns 80'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY default-size-rows 24'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY delete-binding '\''delete-sequence'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY enable-bidi true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY enable-shaping true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY enable-sixel false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY encoding '\''UTF-8'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY exit-action '\''close'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY font '\''Monospace 13'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY foreground-color '\''rgb(254,255,243)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY highlight-background-color '\''rgb(0,255,188)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY highlight-colors-set true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY highlight-foreground-color '\''rgb(0,0,0)'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY login-shell false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY palette '\"'['\''rgb(23,20,33)'\'', '\''rgb(255,77,0)'\'', '\''rgb(128,0,255)'\'', '\''rgb(162,115,76)'\'', '\''rgb(20,204,144)'\'', '\''rgb(163,71,186)'\'', '\''rgb(42,161,179)'\'', '\''rgb(255,255,255)'\'', '\''rgb(94,92,100)'\'', '\''rgb(255,122,0)'\'', '\''rgb(212,41,255)'\'', '\''rgb(233,173,12)'\'', '\''rgb(0,255,179)'\'', '\''rgb(192,97,203)'\'', '\''rgb(0,255,255)'\'', '\''rgb(255,255,255)'\'']'\"''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY preserve-working-directory '\''safe'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY rewrap-on-resize true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY scroll-on-keystroke true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY scroll-on-output false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY scrollback-lines 10000'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY scrollback-unlimited false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY scrollbar-policy '\''always'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY text-blink-mode '\''always'\'''>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY use-custom-command false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY use-system-font false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY use-theme-colors false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY use-theme-transparency false'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY use-transparent-background true'>> create_mapache_profile.sh
	@printf "%s\n" 'gsettings set org.gnome.Terminal.Legacy.Profile:$$BASE_KEY word-char-exceptions '\''@ms nothing'\'''>> create_mapache_profile.sh
	@printf "%s\n" ''>> create_mapache_profile.sh
	@chmod +x create_mapache_profile.sh
	@printf "$(RESET)"
	@sleep 0.5
	@./create_mapache_profile.sh
	@printf "$(MINT_B)\n\t\t   ü¶ù Boom! ü¶ù\n"
	@gsettings set org.gnome.desktop.interface gtk-theme "Adwaita-dark"
	@sleep 1
	@printf "$(MINT_I)\n\tIf you have GNOME, the Mapache_Main\n     profile should now be in your preferences $(RESET)"
	@rm -rf create_mapache_profile.sh
	@printf "\n\t     Hit Enter to continue..."
	@read dummy
	@clear


.PHONY: all fruta uninstall omg paco profile
EOF
