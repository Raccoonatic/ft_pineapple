# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: lde-san- <lde-san-@student.42porto.co      +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/06/11 17:22:46 by lde-san-          #+#    #+#              #
#    Updated: 2025/06/11 17:22:51 by lde-san-         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME	= echoer

MINT	= \033[38;2;55;250;133;48;2;0;0;0m
NEOR	= \033[3m\033[38;2;255;153;51m
B_WI    = \033[1;37m
RESET	= \033[0m
BABY	= \033[38;2;0;255;247m
BLACK	= \033[38;2;0;0;0m

FILES	= make_echoes.c
FILES	+= get_next_line_bonus.c
FILES	+= get_next_line_utils_bonus.c

INC	= get_next_line_bonus.h

%.c:
	@$(MAKE) build_get_next_line_bonus.c build_get_next_line_utils_bonus.c
	@printf "$(BLACK)"
%.h:
	@$(MAKE) build_get_next_line_bonus.h
	@printf "$(BLACK)"

$(NAME): $(INC) $(FILES)
	@cc -g -O0 $(FILES) -o $(NAME)
	@printf "$(BLACK)"
	@$(MAKE) clean
	@$(MAKE) info

info:
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second   🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.  🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second.. 🦝"
	@sleep 0.2
	@clear
	@printf "$(MINT)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t🦝Almost done! Hang tight for a second...🦝"
	@sleep 0.2
	@clear
	@printf "$(RESET)"
	@clear
	@printf "\n"
	@printf "$(MINT)\n\t\t🦝 Hi, Thank you for getting the Echoer! 🦝\n\n"
	@printf "$(NEOR)\tTo use it, simply execute it with the name of a file. When you\n\tdo, you'll  see  that your  terminal  will  show  its content\n\t formatted for you. Simply copy this text into your makefile\n\t  and you'll see that when running it you'll create a copy\n\t   of  it  just  by  executing  the  corresponding  rule\n\n"
	@printf "$(B_WI)for more info, run$(BABY) 'make build_make_echoes.c' $(B_WI)and explore the file it creates\n$(BLACK)"

all: $(NAME)

clean:
	@rm -rf $(FILES) $(INC)
	
fclean: clean
	@rm -rf $(NAME)
	
re: fclean all

.PHONY: all clean fclean re info build_get_next_line_bonus.h build_get_next_line_utils_bonus.c build_get_next_line_bonus.c build_make_echoes.c

build_p_racc.txt:
	@printf "$(NEOR) Building p_racc.txt... $(RESET)"
	@printf "$(MINT)🦝\n\n"
	@> p_racc.txt
	@printf "%s""--+##+\\-:-\$$a'''::\"\"---'++ gf   '                                           \nh">> p_racc.txt
	@open p_racc.txt
	@printf "$(RESET)🦝"


build_get_next_line_bonus.c:
	@printf "$(NEOR) Building get_next_line_bonus.c... $(RESET)"
	@printf "$(MINT)🦝\n\n"
	@> get_next_line_bonus.c
	printf '/* ************************************************************************** */\n'>> get_next_line_bonus.c
	printf '/*                                                                            */\n'>> get_next_line_bonus.c
	printf '/*                                                        :::      ::::::::   */\n'>> get_next_line_bonus.c
	printf '/*   get_next_line_bonus.c                              :+:      :+:    :+:   */\n'>> get_next_line_bonus.c
	printf '/*                                                    +:+ +:+         +:+     */\n'>> get_next_line_bonus.c
	printf '/*   By: lde-san- <lde-san-@student.42porto.co      +#+  +:+       +#+        */\n'>> get_next_line_bonus.c
	printf '/*                                                +#+#+#+#+#+   +#+           */\n'>> get_next_line_bonus.c
	printf '/*   Created: 2025/05/28 22:38:01 by lde-san-          #+#    #+#             */\n'>> get_next_line_bonus.c
	printf '/*   Updated: 2025/06/03 12:24:51 by lde-san-         ###   ########.fr       */\n'>> get_next_line_bonus.c
	printf '/*                                                                            */\n'>> get_next_line_bonus.c
	printf '/* ************************************************************************** */\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf '#include "get_next_line_bonus.h"\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf 'char	*get_lines(t_lst **head)\n'>> get_next_line_bonus.c
	@printf '{\n'>> get_next_line_bonus.c
	@printf '	t_lst	*traveler;\n'>> get_next_line_bonus.c
	@printf '	size_t	guide;\n'>> get_next_line_bonus.c
	@printf '	char	*line;\n'>> get_next_line_bonus.c
	@printf '	size_t	line_len;\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf '	line_len = racc_linesize(*head);\n'>> get_next_line_bonus.c
	@printf '	line = malloc((line_len + 1) * sizeof (char));\n'>> get_next_line_bonus.c
	@printf '	if (!line)\n'>> get_next_line_bonus.c
	@printf '		return (racc_delnode(head, 1), NULL);\n'>> get_next_line_bonus.c
	@printf '	traveler = *head;\n'>> get_next_line_bonus.c
	@printf '	guide = 0;\n'>> get_next_line_bonus.c
	@printf '	while (guide < line_len)\n'>> get_next_line_bonus.c
	@printf '	{\n'>> get_next_line_bonus.c
	@printf '		line[guide] = traveler -> letter;\n'>> get_next_line_bonus.c
	@printf '		traveler = traveler -> next;\n'>> get_next_line_bonus.c
	@printf '		racc_delnode(head, 0);\n'>> get_next_line_bonus.c
	@printf '		guide++;\n'>> get_next_line_bonus.c
	@printf '	}\n'>> get_next_line_bonus.c
	@printf '	line[guide] = '\'''\\\\'0'\'';\n'>> get_next_line_bonus.c
	@printf '	return (line);\n'>> get_next_line_bonus.c
	@printf '}\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf 'int	extract_buffer(t_lst **head, int fd)\n'>> get_next_line_bonus.c
	@printf '{\n'>> get_next_line_bonus.c
	@printf '	ssize_t	read_out;\n'>> get_next_line_bonus.c
	@printf '	ssize_t	guide;\n'>> get_next_line_bonus.c
	@printf '	char	*buffer;\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf '	buffer = malloc(BUFFER_SIZE * sizeof(char));\n'>> get_next_line_bonus.c
	@printf '	if (!buffer)\n'>> get_next_line_bonus.c
	@printf '		return (-1);\n'>> get_next_line_bonus.c
	@printf '	read_out = read(fd, buffer, BUFFER_SIZE);\n'>> get_next_line_bonus.c
	@printf '	if (read_out < 0)\n'>> get_next_line_bonus.c
	@printf '		return (free(buffer), -1);\n'>> get_next_line_bonus.c
	@printf '	if (read_out == 0)\n'>> get_next_line_bonus.c
	@printf '		return (free(buffer), 0);\n'>> get_next_line_bonus.c
	@printf '	guide = 0;\n'>> get_next_line_bonus.c
	@printf '	while (guide < read_out)\n'>> get_next_line_bonus.c
	@printf '	{\n'>> get_next_line_bonus.c
	@printf '		if (racc_lstadd(head, racc_lstnew(buffer[guide])) == -1)\n'>> get_next_line_bonus.c
	@printf '			return (free(buffer), -1);\n'>> get_next_line_bonus.c
	@printf '		guide++;\n'>> get_next_line_bonus.c
	@printf '	}\n'>> get_next_line_bonus.c
	@printf '	free(buffer);\n'>> get_next_line_bonus.c
	@printf '	return (1);\n'>> get_next_line_bonus.c
	@printf '}\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf 'char	*get_next_line(int fd)\n'>> get_next_line_bonus.c
	@printf '{\n'>> get_next_line_bonus.c
	@printf '	static t_lst	*head_hub[MAX_FD];\n'>> get_next_line_bonus.c
	@printf '	int				read_out;\n'>> get_next_line_bonus.c
	@printf '\n'>> get_next_line_bonus.c
	@printf '	if (fd < 0 || BUFFER_SIZE <= 0 || fd >= MAX_FD)\n'>> get_next_line_bonus.c
	@printf '		return (NULL);\n'>> get_next_line_bonus.c
	@printf '	while (racc_findend(&head_hub[fd]) == -1)\n'>> get_next_line_bonus.c
	@printf '	{\n'>> get_next_line_bonus.c
	@printf '		read_out = extract_buffer(&head_hub[fd], fd);\n'>> get_next_line_bonus.c
	@printf '		if (read_out == 0)\n'>> get_next_line_bonus.c
	@printf '			break ;\n'>> get_next_line_bonus.c
	@printf '		if (read_out < 0)\n'>> get_next_line_bonus.c
	@printf '			return (racc_delnode(&head_hub[fd], 1), NULL);\n'>> get_next_line_bonus.c
	@printf '	}\n'>> get_next_line_bonus.c
	@printf '	if (!head_hub[fd])\n'>> get_next_line_bonus.c
	@printf '		return (NULL);\n'>> get_next_line_bonus.c
	@printf '	return (get_lines(&head_hub[fd]));\n'>> get_next_line_bonus.c
	@printf '}\n'>> get_next_line_bonus.c
	@sleep 1.5
	@printf "$(RESET)🦝"


build_get_next_line_utils_bonus.c:
	@printf "$(NEOR) Building get_next_line_utils_bonus.c... $(RESET)"
	@printf "$(MINT)🦝\n\n"
	@> get_next_line_utils_bonus.c
	printf '/* ************************************************************************** */\n'>> get_next_line_utils_bonus.c
	printf '/*                                                                            */\n'>> get_next_line_utils_bonus.c
	printf '/*                                                        :::      ::::::::   */\n'>> get_next_line_utils_bonus.c
	printf '/*   get_next_line_utils_bonus.c                        :+:      :+:    :+:   */\n'>> get_next_line_utils_bonus.c
	printf '/*                                                    +:+ +:+         +:+     */\n'>> get_next_line_utils_bonus.c
	printf '/*   By: lde-san- <lde-san-@student.42porto.co      +#+  +:+       +#+        */\n'>> get_next_line_utils_bonus.c
	printf '/*                                                +#+#+#+#+#+   +#+           */\n'>> get_next_line_utils_bonus.c
	printf '/*   Created: 2025/05/28 22:38:33 by lde-san-          #+#    #+#             */\n'>> get_next_line_utils_bonus.c
	printf '/*   Updated: 2025/06/03 12:25:07 by lde-san-         ###   ########.fr       */\n'>> get_next_line_utils_bonus.c
	printf '/*                                                                            */\n'>> get_next_line_utils_bonus.c
	printf '/* ************************************************************************** */\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf '#include "get_next_line_bonus.h"\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf 't_lst	*racc_lstnew(char c)\n'>> get_next_line_utils_bonus.c
	@printf '{\n'>> get_next_line_utils_bonus.c
	@printf '	t_lst	*result;\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf '	result = malloc(sizeof (t_lst));\n'>> get_next_line_utils_bonus.c
	@printf '	if (!result)\n'>> get_next_line_utils_bonus.c
	@printf '		return (NULL);\n'>> get_next_line_utils_bonus.c
	@printf '	result -> letter = c;\n'>> get_next_line_utils_bonus.c
	@printf '	result -> next = NULL;\n'>> get_next_line_utils_bonus.c
	@printf '	result -> tail = NULL;\n'>> get_next_line_utils_bonus.c
	@printf '	return (result);\n'>> get_next_line_utils_bonus.c
	@printf '}\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf 'size_t	racc_linesize(t_lst *lst)\n'>> get_next_line_utils_bonus.c
	@printf '{\n'>> get_next_line_utils_bonus.c
	@printf '	size_t	count;\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf '	count = 0;\n'>> get_next_line_utils_bonus.c
	@printf '	while (lst)\n'>> get_next_line_utils_bonus.c
	@printf '	{\n'>> get_next_line_utils_bonus.c
	@printf '		count++;\n'>> get_next_line_utils_bonus.c
	@printf '		if (lst -> letter == '\'''\\\\'n'\'')\n'>> get_next_line_utils_bonus.c
	@printf '			break ;\n'>> get_next_line_utils_bonus.c
	@printf '		lst = lst -> next;\n'>> get_next_line_utils_bonus.c
	@printf '	}\n'>> get_next_line_utils_bonus.c
	@printf '	return (count);\n'>> get_next_line_utils_bonus.c
	@printf '}\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf 'int	racc_findend(t_lst **lst)\n'>> get_next_line_utils_bonus.c
	@printf '{\n'>> get_next_line_utils_bonus.c
	@printf '	t_lst	*traveler;\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf '	if (!*lst)\n'>> get_next_line_utils_bonus.c
	@printf '		return (-1);\n'>> get_next_line_utils_bonus.c
	@printf '	traveler = *lst;\n'>> get_next_line_utils_bonus.c
	@printf '	while (traveler)\n'>> get_next_line_utils_bonus.c
	@printf '	{\n'>> get_next_line_utils_bonus.c
	@printf '		if (traveler -> letter == '\'''\\\\'n'\'')\n'>> get_next_line_utils_bonus.c
	@printf '			return (0);\n'>> get_next_line_utils_bonus.c
	@printf '		traveler = traveler -> next;\n'>> get_next_line_utils_bonus.c
	@printf '	}\n'>> get_next_line_utils_bonus.c
	@printf '	return (-1);\n'>> get_next_line_utils_bonus.c
	@printf '}\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf 'void	racc_delnode(t_lst **lst, int clear_all)\n'>> get_next_line_utils_bonus.c
	@printf '{\n'>> get_next_line_utils_bonus.c
	@printf '	t_lst	*temp;\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf '	temp = NULL;\n'>> get_next_line_utils_bonus.c
	@printf '	while (*lst)\n'>> get_next_line_utils_bonus.c
	@printf '	{\n'>> get_next_line_utils_bonus.c
	@printf '		temp = (*lst)-> next;\n'>> get_next_line_utils_bonus.c
	@printf '		free(*lst);\n'>> get_next_line_utils_bonus.c
	@printf '		*lst = temp;\n'>> get_next_line_utils_bonus.c
	@printf '		if (clear_all == 0)\n'>> get_next_line_utils_bonus.c
	@printf '			return ;\n'>> get_next_line_utils_bonus.c
	@printf '	}\n'>> get_next_line_utils_bonus.c
	@printf '	*lst = NULL;\n'>> get_next_line_utils_bonus.c
	@printf '	return ;\n'>> get_next_line_utils_bonus.c
	@printf '}\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf 'int	racc_lstadd(t_lst **lst, t_lst *new)\n'>> get_next_line_utils_bonus.c
	@printf '{\n'>> get_next_line_utils_bonus.c
	@printf '	t_lst	*last;\n'>> get_next_line_utils_bonus.c
	@printf '\n'>> get_next_line_utils_bonus.c
	@printf '	if (!lst || !new)\n'>> get_next_line_utils_bonus.c
	@printf '		return (-1);\n'>> get_next_line_utils_bonus.c
	@printf '	if (!*lst)\n'>> get_next_line_utils_bonus.c
	@printf '	{\n'>> get_next_line_utils_bonus.c
	@printf '		*lst = new;\n'>> get_next_line_utils_bonus.c
	@printf '		(*lst)-> tail = new;\n'>> get_next_line_utils_bonus.c
	@printf '		return (0);\n'>> get_next_line_utils_bonus.c
	@printf '	}\n'>> get_next_line_utils_bonus.c
	@printf '	if (!(*lst)->tail)\n'>> get_next_line_utils_bonus.c
	@printf '	{\n'>> get_next_line_utils_bonus.c
	@printf '		last = *lst;\n'>> get_next_line_utils_bonus.c
	@printf '		while (last)\n'>> get_next_line_utils_bonus.c
	@printf '		{\n'>> get_next_line_utils_bonus.c
	@printf '			if (!(last -> next))\n'>> get_next_line_utils_bonus.c
	@printf '				break ;\n'>> get_next_line_utils_bonus.c
	@printf '			last = last -> next;\n'>> get_next_line_utils_bonus.c
	@printf '		}\n'>> get_next_line_utils_bonus.c
	@printf '		(*lst)-> tail = last;\n'>> get_next_line_utils_bonus.c
	@printf '	}\n'>> get_next_line_utils_bonus.c
	@printf '	(*lst)-> tail -> next = new;\n'>> get_next_line_utils_bonus.c
	@printf '	(*lst)-> tail = new;\n'>> get_next_line_utils_bonus.c
	@printf '	return (0);\n'>> get_next_line_utils_bonus.c
	@printf '}\n'>> get_next_line_utils_bonus.c
	@sleep 1.5
	@printf "$(RESET)🦝"


build_get_next_line_bonus.h:
	@printf "$(NEOR) Building get_next_line_bonus.h... $(RESET)"
	@printf "$(MINT)🦝\n\n"
	@> get_next_line_bonus.h
	printf '/* ************************************************************************** */\n'>> get_next_line_bonus.h
	printf '/*                                                                            */\n'>> get_next_line_bonus.h
	printf '/*                                                        :::      ::::::::   */\n'>> get_next_line_bonus.h
	printf '/*   get_next_line_bonus.h                              :+:      :+:    :+:   */\n'>> get_next_line_bonus.h
	printf '/*                                                    +:+ +:+         +:+     */\n'>> get_next_line_bonus.h
	printf '/*   By: lde-san- <lde-san-@student.42porto.co      +#+  +:+       +#+        */\n'>> get_next_line_bonus.h
	printf '/*                                                +#+#+#+#+#+   +#+           */\n'>> get_next_line_bonus.h
	printf '/*   Created: 2025/05/28 22:39:01 by lde-san-          #+#    #+#             */\n'>> get_next_line_bonus.h
	printf '/*   Updated: 2025/06/07 09:05:31 by lde-san-         ###   ########.fr       */\n'>> get_next_line_bonus.h
	printf '/*                                                                            */\n'>> get_next_line_bonus.h
	printf '/* ************************************************************************** */\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf '#ifndef GET_NEXT_LINE_BONUS_H\n'>> get_next_line_bonus.h
	@printf '# define GET_NEXT_LINE_BONUS_H\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf '# ifndef BUFFER_SIZE\n'>> get_next_line_bonus.h
	@printf '#  define BUFFER_SIZE 42\n'>> get_next_line_bonus.h
	@printf '# endif\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf '# ifndef MAX_FD\n'>> get_next_line_bonus.h
	@printf '#  define MAX_FD 1024\n'>> get_next_line_bonus.h
	@printf '# endif\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf '# include <stdlib.h>\n'>> get_next_line_bonus.h
	@printf '# include <fcntl.h>\n'>> get_next_line_bonus.h
	@printf '# include <unistd.h>\n'>> get_next_line_bonus.h
	@printf '# include <stddef.h>\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf 'typedef struct s_lst\n'>> get_next_line_bonus.h
	@printf '{\n'>> get_next_line_bonus.h
	@printf '	char			letter;\n'>> get_next_line_bonus.h
	@printf '	struct s_lst	*tail;\n'>> get_next_line_bonus.h
	@printf '	struct s_lst	*next;\n'>> get_next_line_bonus.h
	@printf '}	t_lst;\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf 'char	*get_next_line(int fd);\n'>> get_next_line_bonus.h
	@printf 'int		extract_buffer(t_lst **head, int fd);\n'>> get_next_line_bonus.h
	@printf 'char	*get_lines(t_lst **head);\n'>> get_next_line_bonus.h
	@printf 't_lst	*racc_lstnew(char c);\n'>> get_next_line_bonus.h
	@printf 'size_t	racc_linesize(t_lst *lst);\n'>> get_next_line_bonus.h
	@printf 'int		racc_findend(t_lst **lst);\n'>> get_next_line_bonus.h
	@printf 'void	racc_delnode(t_lst **lst, int clear_all);\n'>> get_next_line_bonus.h
	@printf 'int		racc_lstadd(t_lst **lst, t_lst *new);\n'>> get_next_line_bonus.h
	@printf '\n'>> get_next_line_bonus.h
	@printf '#endif\n'>> get_next_line_bonus.h
	@sleep 1.5
	@printf "$(RESET)🦝"


build_make_echoes.c:
	@printf "$(NEOR) Building make_echoes.c... $(RESET)"
	@printf "$(MINT)🦝\n\n"
	@> make_echoes.c
	printf '/* ************************************************************************** */\n'>> make_echoes.c
	printf '/*                                                                            */\n'>> make_echoes.c
	printf '/*                                                        :::      ::::::::   */\n'>> make_echoes.c
	printf '/*   make_echoes.c                                      :+:      :+:    :+:   */\n'>> make_echoes.c
	printf '/*                                                    +:+ +:+         +:+     */\n'>> make_echoes.c
	printf '/*   By: lde-san- <lde-san-@student.42porto.co      +#+  +:+       +#+        */\n'>> make_echoes.c
	printf '/*                                                +#+#+#+#+#+   +#+           */\n'>> make_echoes.c
	printf '/*   Created: 2025/06/08 15:18:45 by lde-san-          #+#    #+#             */\n'>> make_echoes.c
	printf '/*   Updated: 2025/06/08 15:38:56 by lde-san-         ###   ########.fr       */\n'>> make_echoes.c
	printf '/*                                                                            */\n'>> make_echoes.c
	printf '/* ************************************************************************** */\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf '#include "get_next_line_bonus.h"\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf '#define RSET	"'\\\\'033[0m"\n'>> make_echoes.c
	@printf '#define B_WI    "'\\\\'033[1;37m"\n'>> make_echoes.c
	@printf '#define BABY	"'\\\\'033[38;2;0;255;247m"\n'>> make_echoes.c
	@printf '#define MINT	"'\\\\'033[38;2;55;250;133m"\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf '/*TLDR; This program requires gnl. It uses it to read each line from the selected\n'>> make_echoes.c
	@printf 'file so it can be printed while simultaneously formated in a way that the file can\n'>> make_echoes.c
	@printf 'be converted into a makefile rule. The result of running this program with the name \n'>> make_echoes.c
	@printf 'of a file present in the directory, should be an output on the terminal that can be\n'>> make_echoes.c
	@printf 'copy and pasted into the desired makefile. Enjoy <3*/\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf 'size_t str_len(char *str)\n'>> make_echoes.c
	@printf '{\n'>> make_echoes.c
	@printf '	size_t guide;\n'>> make_echoes.c
	@printf '	\n'>> make_echoes.c
	@printf '	guide = 0;\n'>> make_echoes.c
	@printf '	\n'>> make_echoes.c
	@printf '	if (!str)\n'>> make_echoes.c
	@printf '		return (0);\n'>> make_echoes.c
	@printf '	while(str[guide])\n'>> make_echoes.c
	@printf '	{\n'>> make_echoes.c
	@printf '		guide++;\n'>> make_echoes.c
	@printf '	}\n'>> make_echoes.c
	@printf '	return(guide);\n'>> make_echoes.c
	@printf '}\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf 'int compare(char *s1, char *s2)\n'>> make_echoes.c
	@printf '{\n'>> make_echoes.c
	@printf '	size_t guide;\n'>> make_echoes.c
	@printf '	\n'>> make_echoes.c
	@printf '	if (!s1 || !s2)\n'>> make_echoes.c
	@printf '		return(0);\n'>> make_echoes.c
	@printf '	guide = 0;\n'>> make_echoes.c
	@printf '	if (str_len(s1) == str_len(s2))\n'>> make_echoes.c
	@printf '	{\n'>> make_echoes.c
	@printf '		while ((s1[guide] == s2[guide]) && (s1[guide] && s2[guide]))\n'>> make_echoes.c
	@printf '			guide++;\n'>> make_echoes.c
	@printf '	}\n'>> make_echoes.c
	@printf '	if (!(s1[guide]) && !(s2[guide]))\n'>> make_echoes.c
	@printf '		return (1);\n'>> make_echoes.c
	@printf '	return (0);\n'>> make_echoes.c
	@printf '}\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf 'int main( int arc, char **wordy)\n'>> make_echoes.c
	@printf '{\n'>> make_echoes.c
	@printf '	int fd;\n'>> make_echoes.c
	@printf '	char *line;\n'>> make_echoes.c
	@printf '	int guide;\n'>> make_echoes.c
	@printf '	char *head_check = "/* ************************************************************************** */'\\\\'n";\n'>> make_echoes.c
	@printf '	int hat_shoe;\n'>> make_echoes.c
	@printf '	\n'>> make_echoes.c
	@printf '	if (arc != 2)\n'>> make_echoes.c
	@printf '		return (write(1, "No la das mrk: Incorrect argument count", 39), 1);\n'>> make_echoes.c
	@printf '	\n'>> make_echoes.c
	@printf '	fd = open(wordy[1], O_RDONLY);\n'>> make_echoes.c
	@printf '	if (fd < 0)\n'>> make_echoes.c
	@printf '		return (1);\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@printf '	write(1, B_WI, str_len(B_WI));\n'>> make_echoes.c
	@printf '	write(1, "build_", 7);\n'>> make_echoes.c
	@printf '	guide = 0;\n'>> make_echoes.c
	@printf '	while (wordy[1][guide])\n'>> make_echoes.c
	@printf '			write(1, &wordy[1][guide++], 1);\n'>> make_echoes.c
	@printf '	write(1, ":'\\\\'n", 2);\n'>> make_echoes.c
	@printf '	write(1, "'\\\\'t@printf '\\\\'"$$(NEOR) Building ", 27);\n'>> make_echoes.c
	@printf '	guide = 0;\n'>> make_echoes.c
	@printf '	while (wordy[1][guide])\n'>> make_echoes.c
	@printf '			write(1, &wordy[1][guide++], 1);\n'>> make_echoes.c
	@printf '	write(1, "... $$(RESET)'\\\\'"'\\\\'n'\\\\'t@printf '\\\\'"$$(MINT)🦝'\\\\''\\\\'n'\\\\''\\\\'n'\\\\'"'\\\\'n'\\\\'t@> ", 45);\n'>> make_echoes.c
	@printf '	guide = 0;\n'>> make_echoes.c
	@printf '	while (wordy[1][guide])\n'>> make_echoes.c
	@printf '			write(1, &wordy[1][guide++], 1);\n'>> make_echoes.c
	@printf '	write(1, "'\\\\'n", 1);\n'>> make_echoes.c
	@printf '	hat_shoe = 0;\n'>> make_echoes.c
	@printf '	while((line = get_next_line(fd)) != NULL)\n'>> make_echoes.c
	@printf '	{	\n'>> make_echoes.c
	@printf '		if (compare(head_check, line) == 1)\n'>> make_echoes.c
	@printf '				hat_shoe++;\n'>> make_echoes.c
	@printf '		if (hat_shoe == 1)\n'>> make_echoes.c
	@printf '		{\n'>> make_echoes.c
	@printf '			write(1, BABY, str_len(BABY));\n'>> make_echoes.c
	@printf '			write(1, "'\\\\'tprintf '\\\\''\''", 9);\n'>> make_echoes.c
	@printf '		}\n'>> make_echoes.c
	@printf '		else if (hat_shoe > 1 || hat_shoe == 0)\n'>> make_echoes.c
	@printf '		{\n'>> make_echoes.c
	@printf '			if (hat_shoe == 2)\n'>> make_echoes.c
	@printf '			{\n'>> make_echoes.c
	@printf '				hat_shoe++;\n'>> make_echoes.c
	@printf '				write(1, "'\\\\'tprintf '\\\\''\''", 9);\n'>> make_echoes.c
	@printf '			}\n'>> make_echoes.c
	@printf '			else\n'>> make_echoes.c
	@printf '			{\n'>> make_echoes.c
	@printf '				write(1, MINT, str_len(MINT));\n'>> make_echoes.c
	@printf '				write(1, "'\\\\'t@printf '\\\\''\''", 10);\n'>> make_echoes.c
	@printf '			}\n'>> make_echoes.c
	@printf '		}\n'>> make_echoes.c
	@printf '		guide = 0;\n'>> make_echoes.c
	@printf '		while(line[guide])\n'>> make_echoes.c
	@printf '		{\n'>> make_echoes.c
	@printf '		        if (line[guide] == '\'''\\\\'n'\'')\n'>> make_echoes.c
	@printf '		                break ;\n'>> make_echoes.c
	@printf '			else if (line[guide] == 39)\n'>> make_echoes.c
	@printf '				write(1, "'\\\\''\'''\\\\''\\\\''\\\\''\'''\\\\''\''", 4);\n'>> make_echoes.c
	@printf '			else if (line[guide] == 37)\n'>> make_echoes.c
	@printf '				write(1, "%%%%", 2);\n'>> make_echoes.c
	@printf '			else if (line[guide] == 36)\n'>> make_echoes.c
	@printf '				write(1, "$$$$", 2);\n'>> make_echoes.c
	@printf '			else if (line[guide] == 92)\n'>> make_echoes.c
	@printf '				write(1, "'\\\\''\'''\\\\''\\\\''\\\\''\\\\''\\\\''\\\\''\\\\''\\\\''\\\\''\''", 6);\n'>> make_echoes.c
	@printf '			else\n'>> make_echoes.c
	@printf '				write(1, &line[guide], 1);\n'>> make_echoes.c
	@printf '			guide++;\n'>> make_echoes.c
	@printf '		}\n'>> make_echoes.c
	@printf '		free(line);\n'>> make_echoes.c
	@printf '		guide = 0;\n'>> make_echoes.c
	@printf '		write(1, "'\\\\''\\\\'n'\''>> ", 6);\n'>> make_echoes.c
	@printf '		while (wordy[1][guide])\n'>> make_echoes.c
	@printf '			write(1, &wordy[1][guide++], 1);\n'>> make_echoes.c
	@printf '	        write(1, "'\\\\'n", 1);		\n'>> make_echoes.c
	@printf '	}\n'>> make_echoes.c
	@printf '	if(!(((wordy[1][str_len(wordy[1]) - 1] == '\''c'\'') || (wordy[1][str_len(wordy[1]) - 1] == '\''h'\'')) && (wordy[1][str_len(wordy[1]) - 2] == '\''.'\'')))\n'>> make_echoes.c
	@printf '	{\n'>> make_echoes.c
	@printf '		write(1, "'\\\\'t@chmod 777 ", 12);\n'>> make_echoes.c
	@printf '		guide = 0;\n'>> make_echoes.c
	@printf '		while (wordy[1][guide])\n'>> make_echoes.c
	@printf '			write(1, &wordy[1][guide++], 1);\n'>> make_echoes.c
	@printf '		write(1, "'\\\\'n", 1);\n'>> make_echoes.c
	@printf '	}\n'>> make_echoes.c
	@printf '	write(1, "'\\\\'t@open ", 7);\n'>> make_echoes.c
	@printf '	guide = 0;\n'>> make_echoes.c
	@printf '	while (wordy[1][guide])\n'>> make_echoes.c
	@printf '			write(1, &wordy[1][guide++], 1);\n'>> make_echoes.c
	@printf '	write(1, "'\\\\'n", 1);\n'>> make_echoes.c
	@printf '		write(1, "'\\\\'t@printf '\\\\'"$$(RESET)🦝'\\\\'"'\\\\'n", 24);\n'>> make_echoes.c
	@printf '	write(1, RSET, str_len(RSET));\n'>> make_echoes.c
	@printf '	close(fd);\n'>> make_echoes.c
	@printf '	return(0);\n'>> make_echoes.c
	@printf '}\n'>> make_echoes.c
	@printf '\n'>> make_echoes.c
	@sleep 1.5
	@printf "$(RESET)🦝"
